{
  "openapi": "3.1.0",
  "info": {
    "title": "Public API",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Workspace"
    },
    {
      "name": "Workspace/Tag"
    },
    {
      "name": "Task Manager"
    },
    {
      "name": "Task Manager/Project"
    },
    {
      "name": "Task Manager/Project/Custom Fields"
    },
    {
      "name": "Task Manager/Project/Custom Fields/Options"
    },
    {
      "name": "Task Manager/Board"
    },
    {
      "name": "Task Manager/Board/Custom Fields"
    },
    {
      "name": "Task Manager/Board/Custom Fields/Options"
    },
    {
      "name": "Task Manager/BoardColumn"
    },
    {
      "name": "Task Manager/Task"
    },
    {
      "name": "Task Manager/Task/Attachments"
    },
    {
      "name": "Task Manager/Task/Time Entries"
    },
    {
      "name": "Task Manager/Task/Watchers"
    },
    {
      "name": "Task Manager/Custom Fields"
    },
    {
      "name": "Task Manager/Custom Fields/Options"
    },
    {
      "name": "CRM"
    },
    {
      "name": "CRM/Funnels"
    },
    {
      "name": "CRM/Funnels/Custom Fields"
    },
    {
      "name": "CRM/Funnels/Custom Fields/Options"
    },
    {
      "name": "CRM/Funnel Statuses"
    },
    {
      "name": "CRM/Deals"
    },
    {
      "name": "CRM/Deals/Assignees"
    },
    {
      "name": "CRM/Deals/Contacts"
    },
    {
      "name": "CRM/Deals/Organizations"
    },
    {
      "name": "CRM/Deals/Tags"
    },
    {
      "name": "CRM/Deals/Tasks"
    },
    {
      "name": "CRM/Deals/Attachments"
    },
    {
      "name": "CRM/Organizations"
    },
    {
      "name": "CRM/Organizations/Addresses"
    },
    {
      "name": "CRM/Organizations/Emails"
    },
    {
      "name": "CRM/Organizations/Phones"
    },
    {
      "name": "CRM/Organizations/Contacts"
    },
    {
      "name": "CRM/Organizations/Tags"
    },
    {
      "name": "CRM/Contacts"
    },
    {
      "name": "CRM/Contacts/Emails"
    },
    {
      "name": "CRM/Contacts/Phones"
    },
    {
      "name": "CRM/Contacts/Tags"
    },
    {
      "name": "CRM/Currencies"
    },
    {
      "name": "User"
    },
    {
      "name": "Attachments"
    },
    {
      "name": "Tag"
    },
    {
      "name": "Project"
    },
    {
      "name": "Board"
    },
    {
      "name": "BoardColumn"
    },
    {
      "name": "Task"
    },
    {
      "name": "CRM.Funnel"
    },
    {
      "name": "CRM.Funnel Status"
    },
    {
      "name": "CRM.Deal"
    },
    {
      "name": "CRM.Organization"
    },
    {
      "name": "CRM.Contact"
    },
    {
      "name": "CRM.Currency"
    }
  ],
  "paths": {
    "/ws/tags": {
      "get": {
        "summary": "Tag list",
        "deprecated": false,
        "description": "",
        "tags": [
          "Workspace/Tag",
          "Tag"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "Workspace/Tag",
          "Tag"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  }
                },
                "examples": [
                  {
                    "title": "Kek"
                  }
                ],
                "required": [
                  "title"
                ]
              },
              "example": {
                "title": "Work"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "tag": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ws/tags/{id}": {
      "get": {
        "summary": "Tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "Workspace/Tag",
          "Tag"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "tag": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  },
                  "required": [
                    "success",
                    "tag"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "Workspace/Tag",
          "Tag"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": false,
            "example": "application/json",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "examples": [
                  {
                    "title": "Kek2",
                    "color": "#aaaaaa"
                  }
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "color": {
                    "type": "string",
                    "pattern": "^#[0-9a-fA-F]{6}$"
                  }
                },
                "required": [
                  "title",
                  "color"
                ]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete tag",
        "deprecated": false,
        "description": "",
        "operationId": "delete-ws-tags-2",
        "tags": [
          "Workspace/Tag",
          "Tag"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ws": {
      "get": {
        "summary": "Get workspace info",
        "deprecated": false,
        "description": "Get workspace info for current token",
        "operationId": "get-ws",
        "tags": [
          "Workspace",
          "Workspace"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "workspace": {
                      "$ref": "#/components/schemas/Workspace"
                    }
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Personal",
                    "value": {
                      "success": true,
                      "workspace": {
                        "id": 1,
                        "title": "info@weeek.net",
                        "description": null,
                        "isPersonal": true,
                        "logo": "https://storage.weeek.net/img/no_image.png"
                      }
                    }
                  },
                  "2": {
                    "summary": "Team",
                    "value": {
                      "success": true,
                      "workspace": {
                        "id": 2,
                        "title": "Dream team",
                        "description": "Making the world a better place",
                        "isPersonal": false,
                        "logo": null
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/ws/members": {
      "get": {
        "summary": "Get workspace members",
        "deprecated": false,
        "description": "Get workspace members for current workspace",
        "operationId": "get-ws-members",
        "tags": [
          "Workspace",
          "Workspace"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Example",
                    "value": {
                      "success": true,
                      "members": [
                        {
                          "id": "3e265f8a-5c6c-4169-a2b1-6182f10b712b",
                          "email": "info@weeek.net",
                          "logo": "https://storage.weeek.net/logos/MeUZRwz23XfyLAjG_resized_236.png",
                          "lastName": "Hendricks",
                          "firstName": "Richard",
                          "middleName": "string",
                          "position": "Developer",
                          "timeZone": "Europe/Moscow"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects/{project_id}/custom-fields/{custom_field_id}/options": {
      "post": {
        "summary": "Create a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOption3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "option": {
                      "$ref": "#/components/schemas/CustomFieldOption"
                    }
                  },
                  "required": [
                    "success",
                    "option"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects/{project_id}/custom-fields/{custom_field_id}/options/{id}": {
      "put": {
        "summary": "Update a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOption3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "option": {
                      "$ref": "#/components/schemas/CustomFieldOption"
                    }
                  },
                  "required": [
                    "success",
                    "option"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects/{project_id}/custom-fields/{custom_field_id}/options/{id}/move": {
      "post": {
        "summary": "Move a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field option id after which should be moved. Cannot be provided together with before."
                  },
                  "before": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field option id before which should be moved. Cannot be provided together with after."
                  }
                },
                "required": [
                  "after",
                  "before"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects/{project_id}/custom-fields": {
      "post": {
        "summary": "Create a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project/Custom Fields"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldCreateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "customField": {
                      "$ref": "#/components/schemas/CustomField"
                    }
                  },
                  "required": [
                    "success",
                    "customField"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects/{project_id}/custom-fields/{id}": {
      "put": {
        "summary": "Update a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project/Custom Fields"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldUpdateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "customField": {
                      "$ref": "#/components/schemas/CustomField"
                    }
                  },
                  "required": [
                    "success",
                    "customField"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project/Custom Fields"
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects": {
      "get": {
        "summary": "Get project list",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project",
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "projects": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Project"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create project",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project",
          "Project"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "name": "Test project",
                    "logo": "image/logo.jpg",
                    "isPrivate": false,
                    "description": ""
                  }
                },
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "logo": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "minLength": 1
                  },
                  "isPrivate": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "required": [
                  "name",
                  "logo",
                  "isPrivate",
                  "description"
                ]
              },
              "example": {
                "name": "Test project",
                "logo": "image/logo.jpg",
                "isPrivate": false,
                "description": null
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "project": {
                      "$ref": "#/components/schemas/Project"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects/{id}": {
      "put": {
        "summary": "Update project info",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project",
          "Project"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "name": "Test project 2",
                    "logo": "image/kkk.jpg",
                    "isPrivate": false,
                    "description": "kek desc",
                    "color": "#003C93"
                  }
                },
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "logo": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "minLength": 1
                  },
                  "isPrivate": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "minLength": 1
                  },
                  "color": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name",
                  "logo",
                  "isPrivate",
                  "description",
                  "color"
                ]
              },
              "example": {
                "name": "Test project",
                "logo": "image/test.jpg",
                "isPrivate": false,
                "description": "Test description",
                "color": "#003C93"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete project",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project",
          "Project"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get project",
        "deprecated": false,
        "description": "",
        "operationId": "get-tm-projects-id",
        "tags": [
          "Task Manager/Project",
          "Project"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "project": {
                      "$ref": "#/components/schemas/Project"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects/{id}/archive": {
      "post": {
        "summary": "Archive project",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project",
          "Project"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/projects/{id}/un-archive": {
      "post": {
        "summary": "Un Archive project",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Project",
          "Project"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/boards/{board_id}/custom-fields/{custom_field_id}/options": {
      "post": {
        "summary": "Create a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOption3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "option": {
                      "$ref": "#/components/schemas/CustomFieldOption"
                    }
                  },
                  "required": [
                    "success",
                    "option"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/boards/{board_id}/custom-fields/{custom_field_id}/options/{id}": {
      "put": {
        "summary": "Update a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOption3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "option": {
                      "$ref": "#/components/schemas/CustomFieldOption"
                    }
                  },
                  "required": [
                    "success",
                    "option"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/boards/{board_id}/custom-fields/{custom_field_id}/options/{id}/move": {
      "post": {
        "summary": "Move a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field option id after which should be moved. Cannot be provided together with before."
                  },
                  "before": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field option id before which should be moved. Cannot be provided together with after."
                  }
                },
                "required": [
                  "after",
                  "before"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/boards/{board_id}/custom-fields": {
      "post": {
        "summary": "Create a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board/Custom Fields"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldCreateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "customField": {
                      "$ref": "#/components/schemas/CustomField"
                    }
                  },
                  "required": [
                    "success",
                    "customField"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/boards/{board_id}/custom-fields/{id}": {
      "put": {
        "summary": "Update a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board/Custom Fields"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldUpdateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "customField": {
                      "$ref": "#/components/schemas/CustomField"
                    }
                  },
                  "required": [
                    "success",
                    "customField"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board/Custom Fields"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/boards": {
      "get": {
        "summary": "Get board list",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board",
          "Board"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "boards": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Board"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create board",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board",
          "Board"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "examples": [
                  {
                    "name": "Test board",
                    "projectId": 4
                  }
                ],
                "properties": {}
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/boards/{id}": {
      "put": {
        "summary": "Update board",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board",
          "Board"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ],
                "x-examples": {
                  "example-1": {
                    "name": "ToDo3"
                  }
                }
              },
              "example": {
                "name": "Test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete board",
        "deprecated": false,
        "description": "",
        "operationId": "delete-tm-boards-id",
        "tags": [
          "Task Manager/Board",
          "Board"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/boards/{id}/move": {
      "post": {
        "summary": "Move board",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Board",
          "Board"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "upperBoardId": 9
                  }
                },
                "properties": {
                  "upperBoardId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                },
                "required": [
                  "upperBoardId"
                ]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/board-columns": {
      "get": {
        "summary": "Get board column list",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/BoardColumn",
          "BoardColumn"
        ],
        "parameters": [
          {
            "name": "boardId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "boardColumns": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BoardColumn"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create board column",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/BoardColumn",
          "BoardColumn"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "name": "Test 3",
                    "boardId": 6
                  }
                },
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "boardId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "boardId"
                ]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "boardColumn": {
                      "$ref": "#/components/schemas/BoardColumn"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/board-columns/{id}": {
      "put": {
        "summary": "Update board column",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/BoardColumn",
          "BoardColumn"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ],
                "x-examples": {
                  "example-1": {
                    "name": "ToDo 2"
                  }
                }
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete board column",
        "deprecated": false,
        "description": "",
        "operationId": "delete-tm-board-columns-id",
        "tags": [
          "Task Manager/BoardColumn",
          "BoardColumn"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/board-columns/{id}/move": {
      "post": {
        "summary": "Move board column",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/BoardColumn",
          "BoardColumn"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "upperBoardColumnId": 13
                  }
                },
                "properties": {
                  "upperBoardColumnId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                },
                "required": [
                  "upperBoardColumnId"
                ]
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{task_id}/attachments": {
      "post": {
        "summary": "Upload attachments",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task/Attachments"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files[]": {
                    "description": "Max file size is 100MB",
                    "example": "",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "files[]"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Attachment"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{task_id}/time-entries": {
      "post": {
        "summary": "Create a time entry",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task/Time Entries"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Time%20entry%20request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Time%20entry"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{task_id}/time-entries/{time_entry_id}": {
      "put": {
        "summary": "Update a time entry",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task/Time Entries"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time_entry_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Time%20entry%20request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Time%20entry"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a time entry",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task/Time Entries"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time_entry_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{task_id}/watchers": {
      "post": {
        "summary": "Add watchers to a task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task/Watchers"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Watchers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Remove watchers from a task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task/Watchers"
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Watchers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks": {
      "post": {
        "summary": "Create task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "title": "4",
                    "day": "19.03.2022",
                    "projectId": null,
                    "parentId": null,
                    "userId": null,
                    "type": "action",
                    "priority": null,
                    "boardId": null,
                    "boardColumnId": null
                  }
                },
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "day": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "projectId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "parentId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "userId": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "action",
                      "meet",
                      "call"
                    ]
                  },
                  "priority": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "enum": [
                      0,
                      1,
                      2,
                      3
                    ]
                  },
                  "boardId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "boardColumnId": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customFields": {
                    "type": "object",
                    "properties": {},
                    "description": "Key-value object with custom field id and custom field value for the task\n\nFor example\n\n```\n\"customFields\" : {\n    \"<text_custom_field_id>\": \"Text value\",\n    \"<boolean_custom_field_id>\": true,\n    \"<datetime_custom_field_id>\": \"<ISO 8601 datetime string>\",\n    \"<select_custom_field_id>\": \"<custom_field_option_id>\"\n    \"<multiselect_custom_field_id>\": [\"<custom_field_option_id>\"],\n    \"<member_custom_field_id>\": [\"<user_id>\"],\n    \"<contact_custom_field_id>\": \"<contact_id>\",\n    \"<link_custom_field_id>\": \"Link value\",\n    \"<approval_custom_field_id>\": [\"<user_id>\"]\n}\n```"
                  }
                }
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "task": {
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Example",
                    "value": {
                      "success": true,
                      "task": {
                        "id": 19,
                        "parentId": null,
                        "title": "4",
                        "description": "",
                        "date": "19.03.2022",
                        "time": "23:00",
                        "duration": 60,
                        "type": "action",
                        "priority": null,
                        "isCompleted": false,
                        "authorId": "3e265f8a-5c6c-4169-a2b1-6182f10b712b",
                        "userId": null,
                        "boardId": null,
                        "boardColumnId": null,
                        "projectId": null,
                        "image": null,
                        "isPrivate": false,
                        "dateStart": null,
                        "dateEnd": null,
                        "timeStart": null,
                        "timeEnd": null,
                        "tags": [],
                        "subscribers": [
                          "3e265f8a-5c6c-4169-a2b1-6182f10b712b"
                        ],
                        "workloads": [
                          {
                            "id": "bc92d5f2-3aaf-49cc-8010-5007ced66ea6",
                            "userId": "24d20bfa-bc7e-471e-8c17-a199734532dc",
                            "type": 2,
                            "date": "05.10.2022",
                            "duration": 60,
                            "workStartAt": null,
                            "workEndAt": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get tasks",
        "deprecated": false,
        "description": "Get tasks",
        "operationId": "get-tm-tasks",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [
          {
            "name": "day",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "completed",
            "in": "query",
            "description": "Show only completed",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "boardId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "boardColumnId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "0 - Low 1 - Medium 2 - High 3 - Hold",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search text in title and description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sorts in ascending order of the specified parameter. To sort in descending order, prepend a minus sign to the parameter, for example `-name`",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "type",
                "priority",
                "duration",
                "overdue",
                "created",
                "date",
                "start"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "dd.mm.yyyy Required with endDate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "dd.mm.yyyy Required with startDate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "all",
            "in": "query",
            "description": "Shows all tasks, including deleted and completed. If present, the `completed` parameter is ignored",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "tasks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      }
                    },
                    "hasMore": {
                      "type": "boolean"
                    }
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Example",
                    "value": {
                      "success": true,
                      "tasks": [
                        {
                          "id": 0,
                          "parentId": 0,
                          "title": "string",
                          "description": "string",
                          "date": "string",
                          "time": "string",
                          "duration": 60,
                          "type": "action",
                          "priority": 0,
                          "isCompleted": true,
                          "authorId": "string",
                          "userId": "string",
                          "boardId": 0,
                          "boardColumnId": 0,
                          "projectId": 0,
                          "image": "string",
                          "isPrivate": true,
                          "dateStart": "2019-08-24",
                          "dateEnd": "2019-08-24",
                          "timeStart": "14:15:22Z",
                          "timeEnd": "14:15:22Z",
                          "tags": [
                            0
                          ],
                          "subscribers": [
                            "string"
                          ],
                          "workloads": [
                            {
                              "id": "bc92d5f2-3aaf-49cc-8010-5007ced66ea6",
                              "userId": "24d20bfa-bc7e-471e-8c17-a199734532dc",
                              "type": 2,
                              "date": "05.10.2022",
                              "duration": 60,
                              "workStartAt": null,
                              "workEndAt": null
                            }
                          ]
                        }
                      ],
                      "hasMore": true
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{id}": {
      "get": {
        "summary": "Get one task info",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "task": {
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                },
                "examples": {
                  "1": {
                    "summary": "Example",
                    "value": {
                      "success": true,
                      "task": {
                        "id": 4,
                        "parentId": null,
                        "title": "To deal with the font on the One Ring",
                        "description": "The ring interface needs to be redesigned. UX tests show that the font is small and generally illegible, moreover, not everyone gets to heat it up (the test report attached to the task). It's not urgent, but you should try not to forget about the task, it'll remind you about itself.",
                        "date": "01.01.1970",
                        "time": "23:00",
                        "duration": 60,
                        "type": "action",
                        "priority": 2,
                        "isCompleted": false,
                        "authorId": "3e265f8a-5c6c-4169-a2b1-6182f10b712b",
                        "userId": null,
                        "boardId": null,
                        "boardColumnId": null,
                        "projectId": 4,
                        "image": null,
                        "isPrivate": false,
                        "dateStart": null,
                        "dateEnd": null,
                        "timeStart": null,
                        "timeEnd": null,
                        "tags": [
                          1,
                          2
                        ],
                        "subscribers": [
                          "3e265f8a-5c6c-4169-a2b1-6182f10b712b"
                        ],
                        "workloads": [
                          {
                            "id": "bc92d5f2-3aaf-49cc-8010-5007ced66ea6",
                            "userId": "24d20bfa-bc7e-471e-8c17-a199734532dc",
                            "type": 2,
                            "date": "05.10.2022",
                            "duration": 60,
                            "workStartAt": null,
                            "workEndAt": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "task": {
                      "$ref": "#/components/schemas/Task"
                    }
                  },
                  "required": [
                    "task"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{id}/complete": {
      "post": {
        "summary": "Complete task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{id}/un-complete": {
      "post": {
        "summary": "Un complete task",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sucess": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{id}/board": {
      "post": {
        "summary": "Change board",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "boardId": {
                    "type": "integer",
                    "faker": "1"
                  }
                },
                "required": [
                  "boardId"
                ]
              },
              "example": {
                "boardId": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sucess": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/tasks/{id}/board-column": {
      "post": {
        "summary": "Change board column",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Task",
          "Task"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "1",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "boardColumnId": {
                    "type": "integer",
                    "faker": "1"
                  }
                },
                "required": [
                  "boardColumnId"
                ]
              },
              "example": {
                "boardColumnId": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sucess": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/custom-fields/{custom_field_id}/options": {
      "post": {
        "summary": "Create global custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOption3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "option": {
                      "$ref": "#/components/schemas/CustomFieldOption"
                    },
                    "": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "color": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "color"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "option",
                    ""
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "success": true,
                      "option": {
                        "id": "9df95e4a-5578-45f2-a387-06b6eaf256b0",
                        "name": "testOption",
                        "color": "#6C78F4"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/custom-fields/{custom_field_id}/options/{id}": {
      "put": {
        "summary": "Update global custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOption3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "option": {
                      "$ref": "#/components/schemas/CustomFieldOption"
                    }
                  },
                  "required": [
                    "success",
                    "option"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "success": true,
                      "option": {
                        "id": "9df9630d-d164-421a-b3b5-416561c39808",
                        "name": "pink",
                        "color": "#FF6AA9"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete global custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/custom-fields/{custom_field_id}/options/{id}/move": {
      "post": {
        "summary": "Move global custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field option id after which should be moved. Cannot be provided together with before."
                  },
                  "before": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field option id before which should be moved. Cannot be provided together with after."
                  }
                },
                "required": [
                  "after",
                  "before"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/custom-fields": {
      "post": {
        "summary": "Create global custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Custom Fields"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldCreateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "customField": {
                      "$ref": "#/components/schemas/CustomField"
                    }
                  },
                  "required": [
                    "success",
                    "customField"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "success": true,
                      "customField": {
                        "id": "9df95ae9-43b3-485a-8789-9f2d04c0e725",
                        "name": "string",
                        "type": "text"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get global custom fields",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Custom Fields"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/tm/custom-fields/{id}": {
      "put": {
        "summary": "Update global custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Custom Fields"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldUpdateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "customField": {
                      "$ref": "#/components/schemas/CustomField"
                    }
                  },
                  "required": [
                    "success",
                    "customField"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "success": true,
                      "customField": {
                        "id": "9df95a6c-3cfe-4017-b91f-f9b2de21bf93",
                        "name": "test",
                        "type": "text"
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete global custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "Task Manager/Custom Fields"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                },
                "examples": {
                  "1": {
                    "summary": "Success",
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels/{funnel_id}/custom-fields/{custom_field_id}/options": {
      "post": {
        "summary": "Create a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Funnels/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "funnel_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOption3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "option": {
                      "$ref": "#/components/schemas/CustomFieldOption"
                    }
                  },
                  "required": [
                    "success",
                    "option"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels/{funnel_id}/custom-fields/{custom_field_id}/options/{id}": {
      "put": {
        "summary": "Update a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Funnels/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "funnel_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldOption3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "option": {
                      "$ref": "#/components/schemas/CustomFieldOption"
                    }
                  },
                  "required": [
                    "success",
                    "option"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Funnels/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "funnel_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels/{funnel_id}/custom-fields/{custom_field_id}/options/{id}/move": {
      "post": {
        "summary": "Move a custom field option",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Funnels/Custom Fields/Options"
        ],
        "parameters": [
          {
            "name": "funnel_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_field_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field option id after which should be moved. Cannot be provided together with before."
                  },
                  "before": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field option id before which should be moved. Cannot be provided together with after."
                  }
                },
                "required": [
                  "after",
                  "before"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels/{funnel_id}/custom-fields": {
      "post": {
        "summary": "Create a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Funnels/Custom Fields"
        ],
        "parameters": [
          {
            "name": "funnel_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldCreateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "customField": {
                      "$ref": "#/components/schemas/CustomField"
                    }
                  },
                  "required": [
                    "success",
                    "customField"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels/{funnel_id}/custom-fields/{id}": {
      "put": {
        "summary": "Update a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Funnels/Custom Fields"
        ],
        "parameters": [
          {
            "name": "funnel_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldUpdateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "customField": {
                      "$ref": "#/components/schemas/CustomField"
                    }
                  },
                  "required": [
                    "success",
                    "customField"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Funnels/Custom Fields"
        ],
        "parameters": [
          {
            "name": "funnel_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels/{funnel_id}/custom-fields/{id}/move": {
      "post": {
        "summary": "Move a custom field",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Funnels/Custom Fields"
        ],
        "parameters": [
          {
            "name": "funnel_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field id after which should be moved. Cannot be provided together with before."
                  },
                  "before": {
                    "type": "string",
                    "format": "uuid",
                    "description": "An custom field id before which should be moved. Cannot be provided together with after."
                  }
                },
                "required": [
                  "after",
                  "before"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels": {
      "get": {
        "summary": "Get all funnels",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-funnels",
        "tags": [
          "CRM/Funnels",
          "CRM.Funnel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-funnels"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a funnel",
        "deprecated": false,
        "description": "",
        "operationId": "crm-create-funnel",
        "tags": [
          "CRM/Funnels",
          "CRM.Funnel"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunnelManageRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-funnel"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels/{id}": {
      "get": {
        "summary": "Get a funnel",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-funnel",
        "tags": [
          "CRM/Funnels",
          "CRM.Funnel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-funnel"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a funnel",
        "deprecated": false,
        "description": "",
        "operationId": "crm-update-funnel",
        "tags": [
          "CRM/Funnels",
          "CRM.Funnel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunnelManageRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-funnel"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a funnel",
        "deprecated": false,
        "description": "",
        "operationId": "crm-delete-funnel",
        "tags": [
          "CRM/Funnels",
          "CRM.Funnel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/funnels/{funnelId}/statuses": {
      "get": {
        "summary": "Get all funnel statuses",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-funnel-statuses",
        "tags": [
          "CRM/Funnel Statuses",
          "CRM.Funnel Status"
        ],
        "parameters": [
          {
            "name": "funnelId",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-funnel-statuses"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a funnel status",
        "deprecated": false,
        "description": "",
        "operationId": "crm-create-funnel-status",
        "tags": [
          "CRM/Funnel Statuses",
          "CRM.Funnel Status"
        ],
        "parameters": [
          {
            "name": "funnelId",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunnelStatusManageRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-funnel-status"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/statuses{id}": {
      "get": {
        "summary": "Get a funnel status",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-funnel-status",
        "tags": [
          "CRM/Funnel Statuses",
          "CRM.Funnel Status"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-funnel-status"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a funnel status",
        "deprecated": false,
        "description": "",
        "operationId": "crm-update-funnel-status",
        "tags": [
          "CRM/Funnel Statuses",
          "CRM.Funnel Status"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunnelStatusManageRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-funnel-status"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a funnel status",
        "deprecated": false,
        "description": "",
        "operationId": "crm-delete-funnel-status",
        "tags": [
          "CRM/Funnel Statuses",
          "CRM.Funnel Status"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{dealId}/assignees": {
      "post": {
        "summary": "Attach an assignee",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Assignees"
        ],
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assigneeId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "assigneeId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Detach an assignee",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Assignees"
        ],
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assigneeId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "assigneeId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{dealId}/contacts": {
      "post": {
        "summary": "Attach a contact",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Contacts"
        ],
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "contactId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Detach a contact",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Contacts"
        ],
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "contactId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{dealId}/organizations": {
      "post": {
        "summary": "Attach an organization",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Organizations"
        ],
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "organizationId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Detach an organization",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Organizations"
        ],
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "organizationId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{dealId}/tags": {
      "post": {
        "summary": "Attach a tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Tags"
        ],
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag": {
                    "type": "integer"
                  }
                },
                "required": [
                  "tag"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Detach a tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Tags"
        ],
        "parameters": [
          {
            "name": "dealId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag": {
                    "type": "integer"
                  }
                },
                "required": [
                  "tag"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{id}/tasks": {
      "post": {
        "summary": "Attach a new task",
        "deprecated": false,
        "description": "",
        "operationId": "crm-deal-attach-task",
        "tags": [
          "CRM/Deals/Tasks",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "task": {
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{id}/tasks/{taskId}/move": {
      "post": {
        "summary": "Move a attached to the deal task",
        "deprecated": false,
        "description": "",
        "operationId": "crm-move-attached-deal-task",
        "tags": [
          "CRM/Deals/Tasks",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "previousTaskId": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "If null, task will be placed at the top"
                  }
                }
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{id}/tasks/{taskId}": {
      "delete": {
        "summary": "Detach a task",
        "deprecated": false,
        "description": "",
        "operationId": "crm-delete-detach-deal-task",
        "tags": [
          "CRM/Deals/Tasks",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{deal_id}/attachments": {
      "post": {
        "summary": "Upload attachments",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Deals/Attachments"
        ],
        "parameters": [
          {
            "name": "deal_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files[]": {
                    "description": "Max file size is 100MB",
                    "example": "",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "files[]"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Attachment"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/statuses/{statusId}/deals": {
      "get": {
        "summary": "Get all deals",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-funnel-status-deals",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "executorIds",
            "in": "query",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "winStatuses",
            "in": "query",
            "description": "Any value from enum: won, lost, archived",
            "required": false,
            "example": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Any value from enum: today, yesterday, lastWeek",
            "required": false,
            "example": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "example": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of objects to return",
            "required": false,
            "example": 50,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of objects to skip",
            "required": false,
            "example": 0,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-deals"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a deal",
        "deprecated": false,
        "description": "",
        "operationId": "crm-create-funnel-status-deal",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "statusId",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealCreateRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-deal"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{id}": {
      "get": {
        "summary": "Get a deal",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-deal",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-deal"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a deal",
        "deprecated": false,
        "description": "",
        "operationId": "crm-update-deal",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealUpdateRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-deal"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a deal",
        "deprecated": false,
        "description": "",
        "operationId": "crm-delete-deal",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "summary": "Update a deal fields",
        "deprecated": false,
        "description": "",
        "operationId": "crm-patch-deal",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DealCreateRequest"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{id}/move": {
      "post": {
        "summary": "Move a deal",
        "deprecated": false,
        "description": "Move a deal within the funnel",
        "operationId": "crm-move-deal",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "statusId": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "previousDealId": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "If null, the deal will be placed at the top"
                  }
                }
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{id}/funnel": {
      "put": {
        "summary": "Update the deal funnel",
        "deprecated": false,
        "description": "",
        "operationId": "crm-update-deal-funnel",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "funnelId": {
                    "type": "string"
                  }
                }
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/deals/{id}/status": {
      "put": {
        "summary": "Update the deal funnel status",
        "deprecated": false,
        "description": "",
        "operationId": "crm-update-deal-status",
        "tags": [
          "CRM/Deals",
          "CRM.Deal"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "statusId": {
                    "type": "string"
                  }
                }
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{organizationId}/addresses": {
      "post": {
        "summary": "Create an address",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Addresses"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address%20response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{organizationId}/addresses/{addressId}": {
      "put": {
        "summary": "Update the address",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Addresses"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": [
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address%20response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the address",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Addresses"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{organizationId}/emails": {
      "post": {
        "summary": "Create an email",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Emails"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email%20response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{organizationId}/emails/{emailId}": {
      "put": {
        "summary": "Update the email",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Emails"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email%20response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the email",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Emails"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{organizationId}/phones": {
      "post": {
        "summary": "Create a phone",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Phones"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": [
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone%20response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{organizationId}/phones/{phoneId}": {
      "put": {
        "summary": "Update the phone",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Phones"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": [
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone%20response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the phone",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Phones"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{organizationId}/contacts": {
      "post": {
        "summary": "Attach a contact",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Contacts"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "contactId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Detach the contact",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Contacts"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "contactId": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "contactId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{organizationId}/tags": {
      "post": {
        "summary": "Attach a tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Tags"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tagId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "tagId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Detach the tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Organizations/Tags"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tagId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "tagId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations": {
      "get": {
        "summary": "Get all organizations",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-organizations",
        "tags": [
          "CRM/Organizations",
          "CRM.Organization"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of objects to return",
            "required": false,
            "example": 50,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of objects to skip",
            "required": false,
            "example": 0,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-organizations"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create an organization",
        "deprecated": false,
        "description": "",
        "operationId": "crm-create-organization",
        "tags": [
          "CRM/Organizations",
          "CRM.Organization"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/crm-organization4"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-organization"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/organizations/{id}": {
      "get": {
        "summary": "Get an organization",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-organization",
        "tags": [
          "CRM/Organizations",
          "CRM.Organization"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-organization"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update an organization",
        "deprecated": false,
        "description": "",
        "operationId": "crm-update-organization",
        "tags": [
          "CRM/Organizations",
          "CRM.Organization"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/crm-organization4"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-organization"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete an organization",
        "deprecated": false,
        "description": "",
        "operationId": "crm-delete-organization",
        "tags": [
          "CRM/Organizations",
          "CRM.Organization"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/contacts/{contactId}/emails": {
      "post": {
        "summary": "Create an email",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Contacts/Emails"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email%20response1"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/contacts/{contactId}/emails/{emailId}": {
      "put": {
        "summary": "Update the email",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Contacts/Emails"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": 255,
                    "format": "email"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email%20response1"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the email",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Contacts/Emails"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "emailId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/contacts/{contactsId}/phones": {
      "post": {
        "summary": "Create a phone",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Contacts/Phones"
        ],
        "parameters": [
          {
            "name": "contactsId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": [
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone%20response2"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/contacts/{contactsId}/phones/{phoneId}": {
      "put": {
        "summary": "Update the phone",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Contacts/Phones"
        ],
        "parameters": [
          {
            "name": "contactsId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": [
                  "phone"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Phone%20response2"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete the phone",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Contacts/Phones"
        ],
        "parameters": [
          {
            "name": "contactsId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/contacts/{contactId}/tags": {
      "post": {
        "summary": "Attach a tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Contacts/Tags"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tagId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "tagId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Detach the tag",
        "deprecated": false,
        "description": "",
        "tags": [
          "CRM/Contacts/Tags"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tagId": {
                    "type": "integer"
                  }
                },
                "required": [
                  "tagId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/contacts": {
      "get": {
        "summary": "Get all contacts",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-contacts",
        "tags": [
          "CRM/Contacts",
          "CRM.Contact"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of objects to return",
            "required": false,
            "example": 50,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of objects to skip",
            "required": false,
            "example": 0,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-contacts"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a contact",
        "deprecated": false,
        "description": "",
        "operationId": "crm-create-contact",
        "tags": [
          "CRM/Contacts",
          "CRM.Contact"
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/crm-contact5"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-contact"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/contacts/{id}": {
      "get": {
        "summary": "Get a contact",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-contact",
        "tags": [
          "CRM/Contacts",
          "CRM.Contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-contact"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update a contact",
        "deprecated": false,
        "description": "",
        "operationId": "crm-update-contact",
        "tags": [
          "CRM/Contacts",
          "CRM.Contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/crm-contact5"
              },
              "example": ""
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-contact"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a contact",
        "deprecated": false,
        "description": "",
        "operationId": "crm-delete-contact",
        "tags": [
          "CRM/Contacts",
          "CRM.Contact"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/successful-response"
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/crm/currencies": {
      "get": {
        "summary": "Get all currencies",
        "deprecated": false,
        "description": "",
        "operationId": "crm-get-currencies",
        "tags": [
          "CRM/Currencies",
          "CRM.Currency"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/crm-currencies"
                }
              }
            },
            "headers": {}
          },
          "x-200:Success": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/me": {
      "get": {
        "summary": "Get profile",
        "deprecated": false,
        "description": "",
        "tags": [
          "User",
          "User"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "$ref": "#/components/schemas/CurrentUser"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/attachments/{attachment_id}": {
      "get": {
        "summary": "Get an attachment",
        "deprecated": false,
        "description": "",
        "tags": [
          "Attachments"
        ],
        "parameters": [
          {
            "name": "attachment_id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Attachment"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Attachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creatorId": {
            "type": "string",
            "format": "uuid"
          },
          "service": {
            "$ref": "#/components/schemas/AttachmentServiceEnum"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Attachment URL. If `service` is `weeek`, this URL will be available for an hour."
          },
          "size": {
            "type": "integer",
            "description": "The size of the attachment in bytes. Only present when `service` is `weeek`"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "creatorId",
          "service",
          "name",
          "url",
          "createdAt"
        ]
      },
      "AttachmentServiceEnum": {
        "type": "string",
        "enum": [
          "weeek",
          "google_drive",
          "dropbox",
          "one_drive",
          "box"
        ]
      },
      "User": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": "3e265f8a-5c6c-4169-a2b1-6182f10b712b",
            "email": "test@test.gc",
            "logo": "http://app.weeek.gc:8080/img/no_image.png",
            "lastName": null,
            "firstName": null,
            "middleName": null,
            "position": null,
            "lastActivityDate": "2022-03-18T16:53:25",
            "timeZone": "Europe/Moscow"
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "examples": [
              "3e265f8a-5c6c-4169-a2b1-6182f10b712b"
            ]
          },
          "email": {
            "type": "string",
            "examples": [
              "info@weeek.net"
            ]
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "https://storage.weeek.net/logos/MeUZRwz23XfyLAjG_resized_236.png"
            ]
          },
          "lastName": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "Hendricks"
            ]
          },
          "firstName": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "Richard"
            ]
          },
          "middleName": {
            "type": [
              "string",
              "null"
            ]
          },
          "position": {
            "type": [
              "string",
              "null"
            ],
            "examples": [
              "Developer"
            ]
          },
          "timeZone": {
            "type": "string",
            "examples": [
              "Europe/Moscow"
            ]
          }
        }
      },
      "CurrentUser": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "id": "3e265f8a-5c6c-4169-a2b1-6182f10b712b",
            "email": "info@weeek.net",
            "logoLink": "https://app.weeek.net/img/no_image.png",
            "lastName": null,
            "firstName": null,
            "middleName": null,
            "about": null,
            "position": null,
            "language": "en-US",
            "birthDate": null,
            "country": null,
            "timeZone": "Europe/Moscow",
            "phoneNumber": null
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "minLength": 1
          },
          "logoLink": {
            "type": "string",
            "minLength": 1
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "about": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "language": {
            "type": "string",
            "minLength": 1
          },
          "birthDate": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "timeZone": {
            "type": "string",
            "minLength": 1
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "Workspace": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Personal": {
            "id": 1,
            "title": "info@weeek.net",
            "description": null,
            "isPersonal": true,
            "logo": "http://app.weeek.gc:8080/img/no_image.png"
          },
          "Team": {
            "id": 2,
            "title": "Dream team",
            "description": "Making the world a better place",
            "isPersonal": false,
            "logo": null
          }
        },
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "isPersonal": {
            "type": "boolean"
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          }
        }
      },
      "Tag": {
        "type": "object",
        "xml": {
          "name": "Tag"
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1
          },
          "title": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "x-examples": {
          "Example": {
            "id": 1,
            "title": "Backend",
            "color": "#aaaaaa"
          }
        },
        "required": [
          "title",
          "color",
          "id"
        ]
      },
      "Project": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "id": 1,
            "title": "Geek Tasks",
            "logoLink": null,
            "description": null,
            "color": "#dfdfdf",
            "isPrivate": false,
            "team": [
              "3e265f8a-5c6c-4169-a2b1-6182f10b712b"
            ]
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string",
            "minLength": 1
          },
          "logoLink": {
            "type": [
              "string",
              "null"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "color": {
            "type": "string",
            "minLength": 1
          },
          "isPrivate": {
            "type": "boolean"
          },
          "team": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "Board": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "id": 9,
            "name": "Test board",
            "projectId": 4,
            "isPrivate": true
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "projectId": {
            "type": "integer"
          },
          "isPrivate": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "projectId",
          "isPrivate"
        ]
      },
      "BoardColumn": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "id": 8,
            "name": "Undisposed",
            "boardId": 6
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "boardId": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "name",
          "boardId"
        ]
      },
      "Task": {
        "description": "",
        "type": "object",
        "x-examples": {
          "Example": {
            "id": 4,
            "parentId": null,
            "title": "To deal with the font on the One Ring",
            "description": "The ring interface needs to be redesigned. UX tests show that the font is small and generally illegible, moreover, not everyone gets to heat it up (the test report attached to the task). It's not urgent, but you should try not to forget about the task, it'll remind you about itself.",
            "date": "01.01.2022",
            "time": "23:00",
            "duration": 60,
            "type": "action",
            "priority": null,
            "isCompleted": false,
            "authorId": "3e265f8a-5c6c-4169-a2b1-6182f10b712b",
            "userId": null,
            "boardId": null,
            "boardColumnId": null,
            "projectId": 4,
            "image": null,
            "isPrivate": false,
            "dateStart": null,
            "dateEnd": null,
            "timeStart": null,
            "timeEnd": null,
            "tags": [],
            "subscribers": [
              "3e265f8a-5c6c-4169-a2b1-6182f10b712b"
            ],
            "workloads": [
              {
                "id": "bc92d5f2-3aaf-49cc-8010-5007ced66ea6",
                "userId": "24d20bfa-bc7e-471e-8c17-a199734532dc",
                "type": 2,
                "date": "05.10.2022",
                "duration": 60,
                "workStartAt": null,
                "workEndAt": null
              }
            ]
          }
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "parentId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "duration": {
            "type": [
              "integer",
              "null"
            ],
            "description": "In minutes"
          },
          "overdue": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "action",
              "meet",
              "call"
            ]
          },
          "priority": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 3,
            "description": "0 - Low\n1 - Medium\n2 - High\n3 - Hold"
          },
          "isCompleted": {
            "type": "boolean"
          },
          "authorId": {
            "type": "string",
            "description": "ID of the user who created the task"
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "description": "ID of the user who is executing the task"
          },
          "boardId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "boardColumnId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "projectId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "isPrivate": {
            "type": "boolean"
          },
          "startDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date",
            "description": "Start date of the task in `Y-m-d` format"
          },
          "startDateTime": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Start date of the task in ISO 8601 format"
          },
          "dueDate": {
            "type": [
              "string",
              "null"
            ],
            "format": "date",
            "description": "Due date of the task in `Y-m-d` format"
          },
          "dueDateTime": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Due date of the task in ISO 8601 format"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date the task was created in ISO 8601 format"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date the task was last updated in ISO 8601 format"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "subscribers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subTasks": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "workloads": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                },
                "type": {
                  "type": "integer",
                  "enum": [
                    1,
                    2
                  ],
                  "description": "1 - auto calculated from timer\n2 - manual added"
                },
                "date": {
                  "type": "string"
                },
                "duration": {
                  "type": "integer"
                },
                "workStartAt": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "workEndAt": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          },
          "timeEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Time%20entry"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValue"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        },
        "required": [
          "timeEntries",
          "createdAt",
          "updatedAt",
          "overdue"
        ]
      },
      "Currency": {
        "title": "Currency",
        "x-stoplight": {
          "id": "5od3z4vjjyr1z"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "readOnly": true
          },
          "symbol": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "Funnel": {
        "title": "Funnel",
        "x-stoplight": {
          "id": "h7nnnfpqb8ixl"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "currencyId": {
            "type": "integer",
            "default": 1
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri",
            "readOnly": true
          },
          "dealsCount": {
            "type": "integer",
            "readOnly": true
          },
          "dealsAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "default": false
          },
          "isBookmarked": {
            "type": "boolean",
            "default": false,
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "team": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid",
              "readOnly": true
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "FunnelStatus": {
        "title": "Funnel Status",
        "x-stoplight": {
          "id": "8d55e18352d93"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "dealsCount": {
            "type": "integer",
            "readOnly": true
          },
          "dealsAmount": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "Deal": {
        "title": "Deal",
        "x-stoplight": {
          "id": "7ujpofu1f5jxd"
        },
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Slug%20ID"
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "funnelId": {
            "type": "string",
            "readOnly": true
          },
          "statusId": {
            "type": "string",
            "readOnly": true
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "organizations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "amount": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "winStatus": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "won",
              "lost",
              "archived"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": ""
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          },
          "customFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldValue"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        }
      },
      "Organization": {
        "title": "Organization",
        "x-stoplight": {
          "id": "nqs9453aqbbmv"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "responsibleId": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAddress"
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationEmail"
            }
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationPhone"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "createdAt": {
            "type": [
              "string"
            ],
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "OrganizationAddress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "address": {
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "OrganizationEmail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "faker": "email"
          }
        }
      },
      "OrganizationPhone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "phone": {
            "type": "string",
            "maxLength": 255,
            "faker": "email"
          }
        }
      },
      "Contact": {
        "title": "Contact",
        "type": "object",
        "x-stoplight": {
          "id": "da94814c517b1"
        },
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "creatorId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "lastName": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "firstName": {
            "type": "string",
            "maxLength": 255
          },
          "middleName": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "organizations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactEmail"
            }
          },
          "phones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPhone"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ContactEmail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "faker": "email"
          }
        }
      },
      "ContactPhone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "phone": {
            "type": "string",
            "maxLength": 255,
            "faker": "email"
          }
        }
      },
      "CustomField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "boolean",
              "datetime",
              "select",
              "multiselect",
              "member",
              "contact",
              "link",
              "approval"
            ]
          },
          "config": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Only for boolean custom fields",
                "enum": [
                  "switch",
                  "checkbox"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldOption"
            },
            "description": "Only for select and multiselect custom fields"
          }
        },
        "required": [
          "type",
          "options"
        ]
      },
      "CustomFieldOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "enum": [
              "blue",
              "light_blue",
              "dark_purple",
              "purple",
              "dark_pink",
              "pink",
              "light_pink",
              "red",
              "dark_green",
              "green",
              "light_green",
              "dark_yellow"
            ]
          }
        },
        "required": [
          "name",
          "color"
        ]
      },
      "CustomFieldValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "boolean",
              "datetime",
              "select",
              "multiselect",
              "member",
              "contact",
              "link",
              "approval"
            ]
          },
          "config": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Only for boolean custom fields",
                "enum": [
                  "switch",
                  "checkbox"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldOption"
            },
            "description": "Only for select and multiselect custom fields"
          },
          "value": {
            "type": [
              "string",
              "integer",
              "boolean",
              "array",
              "object",
              "number",
              "null"
            ]
          }
        },
        "required": [
          "type",
          "options",
          "value"
        ]
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "crm-organizations": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organization"
            }
          }
        }
      },
      "crm-organization": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        }
      },
      "Address response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": "true"
          },
          "address": {
            "$ref": "#/components/schemas/OrganizationAddress"
          }
        },
        "required": [
          "address"
        ]
      },
      "Email response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": "true"
          },
          "email": {
            "$ref": "#/components/schemas/OrganizationEmail"
          }
        },
        "required": [
          "email"
        ]
      },
      "Phone response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": "true"
          },
          "phone": {
            "$ref": "#/components/schemas/OrganizationPhone"
          }
        },
        "required": [
          "phone"
        ]
      },
      "crm-contacts": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "crm-contact": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "contact": {
            "$ref": "#/components/schemas/Contact"
          }
        }
      },
      "Email response1": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": "true"
          },
          "email": {
            "$ref": "#/components/schemas/ContactEmail"
          }
        },
        "required": [
          "email"
        ]
      },
      "Phone response2": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": "true"
          },
          "phone": {
            "$ref": "#/components/schemas/ContactPhone"
          }
        },
        "required": [
          "phone"
        ]
      },
      "crm-currencies": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        }
      },
      "crm-funnel": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "funnel": {
            "$ref": "#/components/schemas/Funnel"
          }
        }
      },
      "crm-funnels": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "funnels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Funnel"
            }
          }
        }
      },
      "crm-funnel-status": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/FunnelStatus"
          }
        }
      },
      "crm-funnel-statuses": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FunnelStatus"
            }
          }
        }
      },
      "crm-deals": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "deals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deal"
            }
          },
          "hasMoreDeals": {
            "type": "boolean"
          }
        }
      },
      "crm-deal": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "deal": {
            "$ref": "#/components/schemas/Deal"
          }
        }
      },
      "successful-response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "CustomFieldCreateBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "type": {
            "type": "string",
            "enum": [
              "text",
              "boolean",
              "datetime",
              "select",
              "multiselect",
              "member",
              "contact",
              "link",
              "approval"
            ]
          },
          "config": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Only for boolean custom fields",
                "enum": [
                  "switch",
                  "checkbox"
                ]
              }
            },
            "required": [
              "type"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "CustomFieldOption3": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "color": {
            "type": "string",
            "enum": [
              "blue",
              "light_blue",
              "dark_purple",
              "purple",
              "dark_pink",
              "pink",
              "light_pink",
              "red",
              "turquoise",
              "green",
              "light_green",
              "dark_yellow",
              "yellow"
            ]
          }
        },
        "required": [
          "name",
          "color"
        ]
      },
      "CustomFieldUpdateBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "config": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "Only for boolean custom fields",
                "enum": [
                  "switch",
                  "checkbox"
                ]
              }
            },
            "required": [
              "type"
            ]
          }
        }
      },
      "TaskUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "projectId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "boardId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "boardColumnId": {
            "type": [
              "integer",
              "null"
            ]
          },
          "priority": {
            "type": [
              "integer",
              "null"
            ],
            "enum": [
              0,
              1,
              2,
              3
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "action",
              "meet",
              "call"
            ]
          },
          "startDate": {
            "type": [
              "string",
              "null"
            ],
            "description": "The start date of the task in Y-m-d format. \nCannot be provided with startDateTime or dueDateTime",
            "format": "date"
          },
          "dueDate": {
            "type": [
              "string",
              "null"
            ],
            "description": "The due date of the task in Y-m-d format. Cannot be provided with startDateTime or dueDateTime",
            "format": "date"
          },
          "startDateTime": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "title": "",
            "description": "The start datetime of the task in ISO 8601 format. Cannot be provided with startDate or dueDate"
          },
          "dueDateTime": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "title": "",
            "description": "The due datetime of the task in ISO 8601 format. Cannot be provided with startDate or dueDate"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of tag ids"
          },
          "customFields": {
            "type": "object",
            "properties": {},
            "additionalProperties": false,
            "description": "Key-value object with custom field id and custom field value for the task\n\nFor example\n\n```\n\"customFields\" : {\n    \"<text_custom_field_id>\": \"Text value\",\n    \"<boolean_custom_field_id>\": true,\n    \"<datetime_custom_field_id>\": \"<ISO 8601 datetime string>\",\n    \"<select_custom_field_id>\": \"<custom_field_option_id>\"\n    \"<multiselect_custom_field_id>\": [\"<custom_field_option_id>\"],\n    \"<member_custom_field_id>\": [\"<user_id>\"],\n    \"<contact_custom_field_id>\": \"<contact_id>\",\n    \"<link_custom_field_id>\": \"Link value\",\n    \"<approval_custom_field_id>\": [\"<user_id>\"]\n}\n```"
          }
        }
      },
      "FunnelManageRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "currencyId": {
            "type": "integer",
            "default": 1
          },
          "isPrivate": {
            "type": "boolean"
          }
        }
      },
      "FunnelStatusManageRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          }
        }
      },
      "DealCreateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "amount": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "winStatus": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "won",
              "lost",
              "archived"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "organizations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "customFields": {
            "$ref": "#/components/schemas/Custom%20field%20values"
          }
        }
      },
      "DealUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "amount": {
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          },
          "winStatus": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "won",
              "lost",
              "archived"
            ]
          },
          "customFields": {
            "$ref": "#/components/schemas/Custom%20field%20values"
          }
        }
      },
      "crm-organization4": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email",
              "maxLength": 255
            }
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            }
          },
          "responsibles": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "crm-contact5": {
        "type": "object",
        "properties": {
          "lastName": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "firstName": {
            "type": "string",
            "maxLength": 255
          },
          "middleName": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          },
          "organizations": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "emails": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string",
              "format": "email",
              "maxLength": 255
            }
          },
          "phones": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string",
              "maxLength": 255
            }
          },
          "tags": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "integer"
            }
          }
        },
        "required": [
          "firstName"
        ]
      },
      "Custom field values": {
        "type": "object",
        "properties": {},
        "description": "A key-value object with custom field id as key and custom field value\n\nFor example\n\n```\n\"customFields\" : {\n    \"<text_custom_field_id>\": \"Text value\",\n    \"<boolean_custom_field_id>\": true,\n    \"<datetime_custom_field_id>\": \"<ISO 8601 datetime string>\",\n    \"<select_custom_field_id>\": \"<custom_field_option_id>\"\n    \"<multiselect_custom_field_id>\": [\"<custom_field_option_id>\"],\n    \"<member_custom_field_id>\": [\"<user_id>\"],\n    \"<contact_custom_field_id>\": \"<contact_id>\",\n    \"<link_custom_field_id>\": \"https://example.com\",\n    \"<approval_custom_field_id>\": [\"<user_id>\"]\n}\n```"
      },
      "Watchers": {
        "type": "object",
        "properties": {
          "watchers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "minItems": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "watchers"
        ]
      },
      "UUID ID": {
        "type": "string",
        "readOnly": true,
        "format": "uuid",
        "description": "Globally unique identifier."
      },
      "Workspace ID": {
        "type": "integer",
        "readOnly": true,
        "format": "uint64",
        "description": "Numerical identifier unique only within this resource in the workspace."
      },
      "Slug ID": {
        "type": "string",
        "description": "String identifier unique only within this resource in the workspace.",
        "readOnly": true
      },
      "Time entry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "$ref": "#/components/schemas/Time%20entry%20type"
          },
          "isOvertime": {
            "type": "boolean",
            "description": "A flag indicating that the entry was overtime"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The day of entry. In `Y-m-d` format "
          },
          "duration": {
            "type": "integer",
            "description": "Time in minutes, cannot exceed 1440",
            "maximum": 1440,
            "minimum": 1,
            "exclusiveMaximum": 1440,
            "exclusiveMinimum": 1
          }
        },
        "required": [
          "id",
          "userId",
          "type",
          "isOvertime",
          "date",
          "duration"
        ]
      },
      "Time entry type": {
        "type": "integer",
        "enum": [
          1,
          2
        ]
      },
      "Time entry request": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "isOvertime": {
            "type": "boolean",
            "description": "A flag indicating that the entry was overtime"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "The day of entry. In `Y-m-d` format "
          },
          "duration": {
            "type": "integer",
            "description": "Time in minutes",
            "minimum": 1,
            "maximum": 1440,
            "exclusiveMinimum": 1,
            "exclusiveMaximum": 1440
          }
        },
        "required": [
          "userId",
          "isOvertime",
          "date",
          "duration"
        ]
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.weeek.net/public/v1",
      "description": "Production"
    }
  ],
  "security": [
    {
      "bearer": []
    }
  ]
}